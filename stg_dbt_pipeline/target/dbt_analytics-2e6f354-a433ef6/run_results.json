{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.11", "generated_at": "2024-04-13T22:05:57.748057Z", "invocation_id": "7799a1bc-40ea-47f2-a92d-1befa2ba8d12", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T22:05:00.063906Z", "completed_at": "2024-04-13T22:05:00.068853Z"}, {"name": "execute", "started_at": "2024-04-13T22:05:00.082377Z", "completed_at": "2024-04-13T22:05:16.203058Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 16.342615127563477, "adapter_response": {"_message": "OK", "query_id": "01eef9e1-e0a7-1791-8397-5d4918b857ae"}, "message": "OK", "failures": null, "unique_id": "model.stridetechgo.enriched_facility", "compiled": true, "compiled_code": "SELECT \n    facility,\n    md5(facility) AS facility_id,\n    current_timestamp() AS lastupdated\nFROM `dev`.`integrated`.`physical_therapy_evals`\nGROUP BY \n    facility,\n    md5(facility)", "relation_name": "`dev`.`dbt-nstankus_enriched`.`enriched_facility`"}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-04-13T22:05:16.406450Z", "completed_at": "2024-04-13T22:05:16.434162Z"}, {"name": "execute", "started_at": "2024-04-13T22:05:16.455429Z", "completed_at": "2024-04-13T22:05:17.740656Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 1.4432909488677979, "adapter_response": {"_message": "OK", "query_id": "01eef9e1-e93a-19cf-943d-a60334599861"}, "message": null, "failures": 0, "unique_id": "test.stridetechgo.not_null_enriched_facility_facility_id.5683237b68", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect facility_id\nfrom `dev`.`dbt-nstankus_enriched`.`enriched_facility`\nwhere facility_id is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-04-13T22:05:16.424123Z", "completed_at": "2024-04-13T22:05:16.433036Z"}, {"name": "execute", "started_at": "2024-04-13T22:05:16.436800Z", "completed_at": "2024-04-13T22:05:17.743397Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 1.4473810195922852, "adapter_response": {"_message": "OK", "query_id": "01eef9e1-e93c-19e0-9587-7f16f9d8866a"}, "message": null, "failures": 0, "unique_id": "test.stridetechgo.unique_enriched_facility_facility_id.a65163b9e3", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    facility_id as unique_field,\n    count(*) as n_records\n\nfrom `dev`.`dbt-nstankus_enriched`.`enriched_facility`\nwhere facility_id is not null\ngroup by facility_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T22:05:00.055324Z", "completed_at": "2024-04-13T22:05:00.067901Z"}, {"name": "execute", "started_at": "2024-04-13T22:05:00.070934Z", "completed_at": "2024-04-13T22:05:28.026935Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 28.075819969177246, "adapter_response": {"_message": "OK", "query_id": "01eef9e1-e0b1-1470-b147-3fa5d07bbf0a"}, "message": "OK", "failures": null, "unique_id": "model.stridetechgo.curated_fact_stg", "compiled": true, "compiled_code": "SELECT \n    -- Timestamp extrapolation\n    CAST(from_unixtime( -- Convert from unixtime back to UTC\n        (unix_timestamp(device_time) -- Convert timestamp to sec from ms\n        - MIN(unix_timestamp(device_time)) OVER (PARTITION BY user, week)) -- Subtract by min timestamp over user/week\n        + start_time)  -- Add start time for user/week \n    AS timestamp) AS user_time, \n    CAST(unix_timestamp(device_time) -- Convert timestamp to sec from ms\n        - MIN(unix_timestamp(device_time)) OVER (PARTITION BY user, week) -- Subtract by min timestamp over user/week\n    AS timestamp) AS session_time,\n    -- Metrics definition\n    CASE \n        WHEN left_lbf > force_threshold AND activity_flag = 1 THEN 1\n            WHEN left_lbf IS NOT NULL THEN 0\n            ELSE NULL\n    END AS left_misuse_flag,\n    CASE \n        WHEN right_lbf > force_threshold AND activity_flag = 1 THEN 1\n            WHEN right_lbf IS NOT NULL THEN 0\n            ELSE NULL\n    END AS right_misuse_flag,\n    CASE \n        WHEN hip_distance > hip_distance_threshold AND activity_flag = 1 THEN 1\n            WHEN hip_distance IS NOT NULL THEN 0\n            ELSE NULL\n    END AS hip_misuse_flag,\n    CASE \n        WHEN (left_lbf > force_threshold OR right_lbf > force_threshold OR hip_distance > hip_distance_threshold) AND activity_flag = 1 THEN 1\n            WHEN COALESCE(left_lbf, right_lbf, hip_distance) IS NOT NULL THEN 0\n            ELSE NULL\n    END AS total_misuse_flag,\n    activity_flag,\n    -- Imposing range constraints on lbf\n    CASE \n        WHEN left_lbf < 0 THEN 0\n        WHEN left_lbf > 100 THEN 100\n        ELSE left_lbf\n    END AS left_lbf,\n    CASE \n        WHEN right_lbf < 0 THEN 0\n        WHEN right_lbf > 100 THEN 100\n        ELSE right_lbf\n    END AS right_lbf,\n    left_adc,\n    right_adc,\n    hip_distance,\n    left_vibration_trigger,\n    right_vibration_trigger,\n    hip_vibration_trigger,\n    force_threshold,\n    hip_distance_threshold,\n    baseline_left_adc,\n    baseline_right_adc,\n    left_adc_change,\n    right_adc_change,\n    accelerometer_motion_flag,\n    file_path,\n    device,\n    week,\n    file,\n    user,\n    fsr_length_adjustment,\n    trial_type,\n    run_id,\n    extraction_time as extraction_time\nFROM `dev`.`integrated`.`stg_nodes` base", "relation_name": "`dev`.`dbt-nstankus_curated`.`curated_fact_stg`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T22:05:28.162092Z", "completed_at": "2024-04-13T22:05:28.174952Z"}, {"name": "execute", "started_at": "2024-04-13T22:05:28.191732Z", "completed_at": "2024-04-13T22:05:35.595602Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 7.55981707572937, "adapter_response": {"_message": "OK", "query_id": "01eef9e1-f09a-1733-9eba-a564ea8d561f"}, "message": "OK", "failures": null, "unique_id": "model.stridetechgo.enriched_trial", "compiled": true, "compiled_code": "SELECT \n    trial_type,\n    MD5(trial_type) AS trial_id,\n    current_timestamp() AS lastupdated\nFROM `dev`.`dbt-nstankus_curated`.`curated_fact_stg`\nGROUP BY \n    trial_type,\n    MD5(trial_type)", "relation_name": "`dev`.`dbt-nstankus_enriched`.`enriched_trial`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T22:05:28.166090Z", "completed_at": "2024-04-13T22:05:28.175905Z"}, {"name": "execute", "started_at": "2024-04-13T22:05:28.198930Z", "completed_at": "2024-04-13T22:05:36.238175Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 8.190404176712036, "adapter_response": {"_message": "OK", "query_id": "01eef9e1-f099-17f7-9689-af37f25cc74f"}, "message": "OK", "failures": null, "unique_id": "model.stridetechgo.enriched_user", "compiled": true, "compiled_code": "SELECT DISTINCT \n    COALESCE(f.user, pt.user, s.user) AS user,\n    s.age,\n    s.gender,\n    s.height_in,\n    s.weight_lbs,\n    s.dob,\n    s.walker_trainer,\n    s.walker_purchased_from,\n    s.walker_manufacturer,\n    md5(COALESCE(f.user, pt.user, s.user)) AS user_id,\n    CAST(\n        RIGHT(\n            COALESCE(f.user, pt.user, s.user),\n            LENGTH(COALESCE(f.user, pt.user, s.user)) - 1\n        ) AS INTEGER)\n     AS user_no,\n    current_timestamp() AS lastupdated\nFROM `dev`.`dbt-nstankus_curated`.`curated_fact_stg` f\nLEFT JOIN `dev`.`integrated`.`physical_therapy_evals` pt\n    ON pt.user = f.user\nLEFT JOIN `dev`.`integrated`.`user_surveys` s\n    ON s.user = f.user\nWHERE COALESCE(f.user, pt.user, s.user) IS NOT NULL", "relation_name": "`dev`.`dbt-nstankus_enriched`.`enriched_user`"}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-04-13T22:05:35.712006Z", "completed_at": "2024-04-13T22:05:35.723211Z"}, {"name": "execute", "started_at": "2024-04-13T22:05:35.726949Z", "completed_at": "2024-04-13T22:05:36.757160Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.1563951969146729, "adapter_response": {"_message": "OK", "query_id": "01eef9e1-f4b9-14b1-b5ed-74f4b97d0176"}, "message": null, "failures": 0, "unique_id": "test.stridetechgo.not_null_enriched_trial_trial_id.8ef1d288ad", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect trial_id\nfrom `dev`.`dbt-nstankus_enriched`.`enriched_trial`\nwhere trial_id is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-04-13T22:05:35.717704Z", "completed_at": "2024-04-13T22:05:35.724317Z"}, {"name": "execute", "started_at": "2024-04-13T22:05:35.730397Z", "completed_at": "2024-04-13T22:05:36.958923Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 1.348175048828125, "adapter_response": {"_message": "OK", "query_id": "01eef9e1-f4b3-1154-9812-429f2e119d45"}, "message": null, "failures": 0, "unique_id": "test.stridetechgo.unique_enriched_trial_trial_id.42bec42e1a", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    trial_id as unique_field,\n    count(*) as n_records\n\nfrom `dev`.`dbt-nstankus_enriched`.`enriched_trial`\nwhere trial_id is not null\ngroup by trial_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-04-13T22:05:36.344972Z", "completed_at": "2024-04-13T22:05:36.368215Z"}, {"name": "execute", "started_at": "2024-04-13T22:05:36.374585Z", "completed_at": "2024-04-13T22:05:37.342379Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 1.109255075454712, "adapter_response": {"_message": "OK", "query_id": "01eef9e1-f51a-1a38-9212-1c1b51932fc5"}, "message": null, "failures": 0, "unique_id": "test.stridetechgo.not_null_enriched_user_user_id.fc955e4659", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect user_id\nfrom `dev`.`dbt-nstankus_enriched`.`enriched_user`\nwhere user_id is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-04-13T22:05:36.346657Z", "completed_at": "2024-04-13T22:05:36.367221Z"}, {"name": "execute", "started_at": "2024-04-13T22:05:36.370902Z", "completed_at": "2024-04-13T22:05:37.498635Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 1.2608909606933594, "adapter_response": {"_message": "OK", "query_id": "01eef9e1-f517-18fc-b998-ac9b6a6c8680"}, "message": null, "failures": 0, "unique_id": "test.stridetechgo.unique_enriched_user_user_id.7903fc603b", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    user_id as unique_field,\n    count(*) as n_records\n\nfrom `dev`.`dbt-nstankus_enriched`.`enriched_user`\nwhere user_id is not null\ngroup by user_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T22:05:28.148900Z", "completed_at": "2024-04-13T22:05:28.171607Z"}, {"name": "execute", "started_at": "2024-04-13T22:05:28.177622Z", "completed_at": "2024-04-13T22:05:37.608199Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 9.580018043518066, "adapter_response": {"_message": "OK", "query_id": "01eef9e1-f0ac-1e31-a73f-3f0ba7d9c7cb"}, "message": "OK", "failures": null, "unique_id": "model.stridetechgo.enriched_hour", "compiled": true, "compiled_code": "SELECT \n    week,\n    cast(substring(week, len(week)-1, len(week)) AS int) AS week_num,\n    date_trunc('day', user_time) AS day,\n    date_trunc('hour', user_time) AS hour,\n    md5(date_trunc('hour', user_time) || week) AS hour_id,\n    current_timestamp() AS lastupdated\nFROM `dev`.`dbt-nstankus_curated`.`curated_fact_stg`\nGROUP BY \n    week,\n    date_trunc('day', user_time),\n    date_trunc('hour', user_time),\n    md5(date_trunc('hour', user_time) || week)", "relation_name": "`dev`.`dbt-nstankus_enriched`.`enriched_hour`"}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-04-13T22:05:37.730399Z", "completed_at": "2024-04-13T22:05:37.747555Z"}, {"name": "execute", "started_at": "2024-04-13T22:05:37.752603Z", "completed_at": "2024-04-13T22:05:38.738497Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.1602120399475098, "adapter_response": {"_message": "OK", "query_id": "01eef9e1-f5e9-1436-820c-a54ab9286943"}, "message": null, "failures": 0, "unique_id": "test.stridetechgo.not_null_enriched_hour_hour_id.9212fc7e6e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hour_id\nfrom `dev`.`dbt-nstankus_enriched`.`enriched_hour`\nwhere hour_id is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-04-13T22:05:37.739618Z", "completed_at": "2024-04-13T22:05:37.746747Z"}, {"name": "execute", "started_at": "2024-04-13T22:05:37.749732Z", "completed_at": "2024-04-13T22:05:38.893068Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 1.265202283859253, "adapter_response": {"_message": "OK", "query_id": "01eef9e1-f5ea-1f13-a520-eb0cd1894043"}, "message": null, "failures": 0, "unique_id": "test.stridetechgo.unique_enriched_hour_hour_id.b2e40e661f", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    hour_id as unique_field,\n    count(*) as n_records\n\nfrom `dev`.`dbt-nstankus_enriched`.`enriched_hour`\nwhere hour_id is not null\ngroup by hour_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T22:05:28.148120Z", "completed_at": "2024-04-13T22:05:28.172908Z"}, {"name": "execute", "started_at": "2024-04-13T22:05:28.185335Z", "completed_at": "2024-04-13T22:05:38.961249Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 10.966958045959473, "adapter_response": {"_message": "OK", "query_id": "01eef9e1-f0a9-142c-9ce3-b312f31ea7ba"}, "message": "OK", "failures": null, "unique_id": "model.stridetechgo.enriched_device", "compiled": true, "compiled_code": "SELECT \n    COALESCE(f.device, pt.device, s.device) AS device,\n    md5(COALESCE(f.device, pt.device, s.device)) AS device_id,\n    current_timestamp() AS lastupdated\nFROM `dev`.`dbt-nstankus_curated`.`curated_fact_stg` f\nFULL JOIN `dev`.`integrated`.`physical_therapy_evals` pt\n    ON pt.device = f.device\nFULL JOIN `dev`.`integrated`.`user_surveys` s\n    ON s.device = f.device\nWHERE COALESCE(f.device, pt.device, s.device) IS NOT NULL\nGROUP BY \n    COALESCE(f.device, pt.device, s.device),\n    md5(COALESCE(f.device, pt.device, s.device))", "relation_name": "`dev`.`dbt-nstankus_enriched`.`enriched_device`"}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-04-13T22:05:39.117892Z", "completed_at": "2024-04-13T22:05:39.129932Z"}, {"name": "execute", "started_at": "2024-04-13T22:05:39.132579Z", "completed_at": "2024-04-13T22:05:40.090169Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 1.080146074295044, "adapter_response": {"_message": "OK", "query_id": "01eef9e1-f6c1-1b71-9fb3-a9e4d9c7af26"}, "message": null, "failures": 0, "unique_id": "test.stridetechgo.not_null_enriched_device_device_id.3e9e77ed3d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect device_id\nfrom `dev`.`dbt-nstankus_enriched`.`enriched_device`\nwhere device_id is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-04-13T22:05:39.123931Z", "completed_at": "2024-04-13T22:05:39.131635Z"}, {"name": "execute", "started_at": "2024-04-13T22:05:39.144466Z", "completed_at": "2024-04-13T22:05:40.288058Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 1.2860422134399414, "adapter_response": {"_message": "OK", "query_id": "01eef9e1-f6c4-1aaf-a8e9-5de32cad5e62"}, "message": null, "failures": 0, "unique_id": "test.stridetechgo.unique_enriched_device_device_id.923130e507", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    device_id as unique_field,\n    count(*) as n_records\n\nfrom `dev`.`dbt-nstankus_enriched`.`enriched_device`\nwhere device_id is not null\ngroup by device_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T22:05:40.410126Z", "completed_at": "2024-04-13T22:05:40.419297Z"}, {"name": "execute", "started_at": "2024-04-13T22:05:40.420884Z", "completed_at": "2024-04-13T22:05:45.072032Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 4.771878957748413, "adapter_response": {"_message": "OK", "query_id": "01eef9e1-f7d4-1e86-ac15-92f33e20f09d"}, "message": "OK", "failures": null, "unique_id": "model.stridetechgo.curated_fact_physical_therapy_evals", "compiled": true, "compiled_code": "SELECT \n    NULL AS start_week,\n    NULL AS end_week,\n    start_abc_score,\n    start_tug_score_fastest_attempt,\n    start_tandem_balance_total_time,\n    start_successful_tandem_balance_positions,\n    start_functional_reach,\n    end_abc_score,\n    end_tug_score_fastest_attempt,\n    end_tandem_balance_score_total,\n    end_successful_tandem_balance_positions,\n    end_functional_reach,\n    d.device_id,\n    u.user_id,\n    fac.facility_id,\n    current_timestamp() AS lastupdated\nfrom `dev`.`integrated`.`physical_therapy_evals` pt\nleft join `dev`.`dbt-nstankus_enriched`.`enriched_device` d\n    on d.device = pt.device\nleft join `dev`.`dbt-nstankus_enriched`.`enriched_user` u\n    on u.user = pt.user\nleft join `dev`.`dbt-nstankus_enriched`.`enriched_facility` fac\n    on fac.facility = pt.facility", "relation_name": "`dev`.`dbt-nstankus_curated`.`curated_fact_physical_therapy_evals`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T22:05:40.414598Z", "completed_at": "2024-04-13T22:05:40.426469Z"}, {"name": "execute", "started_at": "2024-04-13T22:05:40.429546Z", "completed_at": "2024-04-13T22:05:45.257280Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 4.958241939544678, "adapter_response": {"_message": "OK", "query_id": "01eef9e1-f7d7-1a82-8bb4-9dd173146a73"}, "message": "OK", "failures": null, "unique_id": "model.stridetechgo.curated_fact_user_surveys", "compiled": true, "compiled_code": "SELECT \n    self_reported_physical_activity_per_week_hrs,\n    satisfied_with_activity,\n    fear_of_falling,\n    fall_history,\n    length_of_time_using_walker,\n    likes_using_walker,\n    received_walker_training,\n    description_of_changes_in_DLa,\n    would_purchase_stg,\n    how_much_would_you_pay,\n    would_recommend_stg,\n    stg_helped_learn_use_walker_better,\n    d.device_id,\n    u.user_id,\n    fac.facility_id,\n    current_timestamp() AS lastupdated\nFROM `dev`.`integrated`.`user_surveys` us\nleft join `dev`.`dbt-nstankus_enriched`.`enriched_device` d\n    on d.device = us.device\nleft join `dev`.`dbt-nstankus_enriched`.`enriched_user` u\n    on u.user = us.user\nleft join `dev`.`dbt-nstankus_enriched`.`enriched_facility` fac\n    on fac.facility = us.facility", "relation_name": "`dev`.`dbt-nstankus_curated`.`curated_fact_user_surveys`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T22:05:45.371662Z", "completed_at": "2024-04-13T22:05:45.379619Z"}, {"name": "execute", "started_at": "2024-04-13T22:05:45.381063Z", "completed_at": "2024-04-13T22:05:52.452252Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 7.199744939804077, "adapter_response": {"_message": "OK", "query_id": "01eef9e1-faca-1c79-b1a1-9b62f73f394f"}, "message": "OK", "failures": null, "unique_id": "model.stridetechgo.enriched_fact_stg", "compiled": true, "compiled_code": "select\n    left_misuse_flag,\n    right_misuse_flag,\n    hip_misuse_flag,\n    total_misuse_flag,\n    -- Create metrics to track difference between identified misuse and triggered misuse\n    --- Missed triggers\n    CASE \n        WHEN left_vibration_trigger > 1 AND left_misuse_flag = 1 THEN 0\n            WHEN left_vibration_trigger > 1 AND left_misuse_flag = 0 THEN 0\n                WHEN left_vibration_trigger = 1 AND left_misuse_flag = 1 THEN 1\n        ELSE NULL\n    END AS left_missed_trigger,\n    CASE \n        WHEN right_vibration_trigger > 1 AND right_misuse_flag = 1 THEN 0\n            WHEN right_vibration_trigger > 1 AND right_misuse_flag = 0 THEN 0\n                WHEN right_vibration_trigger = 1 AND right_misuse_flag = 1 THEN 1\n        ELSE NULL\n    END AS right_missed_trigger,\n    CASE \n        WHEN hip_vibration_trigger > 1 AND hip_misuse_flag = 1 THEN 0\n            WHEN hip_vibration_trigger > 1 AND hip_misuse_flag = 0 THEN 0\n                WHEN hip_vibration_trigger = 1 AND hip_misuse_flag = 1 THEN 1\n        ELSE NULL\n    END AS hip_missed_trigger,\n    CASE \n        WHEN (left_vibration_trigger > 1 OR right_vibration_trigger > 1 OR hip_vibration_trigger > 1) AND total_misuse_flag = 1 THEN 0\n            WHEN (left_vibration_trigger > 1 OR right_vibration_trigger > 1 OR hip_vibration_trigger > 1) AND total_misuse_flag = 0 THEN 0\n                WHEN (left_vibration_trigger = 1 AND right_vibration_trigger = 1 AND hip_vibration_trigger = 1) AND total_misuse_flag = 1 THEN 1\n        ELSE NULL\n    END AS total_missed_trigger,\n    --- Trigger misfires\n    CASE \n        WHEN left_vibration_trigger = 3 AND left_misuse_flag = 1 THEN 0\n            WHEN left_vibration_trigger = 3 AND left_misuse_flag = 0 THEN 1\n                WHEN left_vibration_trigger < 3 AND left_misuse_flag = 1 THEN 0\n        ELSE NULL\n    END AS left_trigger_misfire,\n    CASE \n        WHEN right_vibration_trigger = 3 AND right_misuse_flag = 1 THEN 0\n            WHEN right_vibration_trigger = 3 AND right_misuse_flag = 0 THEN 1\n                WHEN right_vibration_trigger < 3 AND right_misuse_flag = 1 THEN 0\n        ELSE NULL\n    END AS right_trigger_misfire,\n    CASE \n        WHEN hip_vibration_trigger = 3 AND hip_misuse_flag = 1 THEN 0\n            WHEN hip_vibration_trigger = 3 AND hip_misuse_flag = 0 THEN 1\n                WHEN hip_vibration_trigger < 3 AND hip_misuse_flag = 1 THEN 0\n        ELSE NULL\n    END AS hip_trigger_misfire,\n    CASE \n        WHEN (left_vibration_trigger = 3 OR right_vibration_trigger = 3 OR hip_vibration_trigger = 3) AND total_misuse_flag = 1 THEN 0\n            WHEN (left_vibration_trigger = 3 OR right_vibration_trigger = 3 OR hip_vibration_trigger = 3) AND total_misuse_flag = 0 THEN 1\n                WHEN (left_vibration_trigger < 3 AND right_vibration_trigger < 3 AND hip_vibration_trigger < 3) AND total_misuse_flag = 1 THEN 0\n        ELSE NULL\n    END AS total_trigger_misfire,\n    -- Translate triggers to vibration\n    CASE \n        WHEN left_vibration_trigger == 3 AND activity_flag = 1 THEN 1\n            WHEN left_vibration_trigger IS NOT NULL THEN 0\n            ELSE NULL\n    END AS left_vibration_flag,\n    CASE \n        WHEN right_vibration_trigger == 3 AND activity_flag = 1 THEN 1\n            WHEN right_vibration_trigger IS NOT NULL THEN 0\n            ELSE NULL\n    END AS right_vibration_flag,\n    CASE \n        WHEN hip_vibration_trigger == 3 AND activity_flag = 1 THEN 1\n            WHEN hip_vibration_trigger IS NOT NULL THEN 0\n            ELSE NULL\n    END AS hip_vibration_flag,\n    CASE \n        WHEN (left_vibration_trigger == 3 OR right_vibration_trigger == 3 OR hip_vibration_trigger == 3) AND activity_flag = 1 THEN 1\n            WHEN COALESCE(left_vibration_flag, right_vibration_trigger, hip_vibration_trigger) IS NOT NULL THEN 0\n            ELSE NULL\n    END AS vibration_flag,\n    e.activity_flag AS activity_sec,\n    left_lbf,\n    right_lbf,\n    left_adc,\n    right_adc,\n    hip_distance,\n    force_threshold,\n    hip_distance_threshold,\n    baseline_left_adc,\n    baseline_right_adc,\n    left_adc_change,\n    right_adc_change,\n    fsr_length_adjustment,\n    -- PT metrics\n    start_abc_score,\n    start_tug_score_fastest_attempt,\n    start_tandem_balance_total_time,\n    start_successful_tandem_balance_positions,\n    start_functional_reach,\n    end_abc_score,\n    end_tug_score_fastest_attempt,\n    end_tandem_balance_score_total,\n    end_successful_tandem_balance_positions,\n    end_functional_reach,\n    -- Survey metrics\n    self_reported_physical_activity_per_week_hrs,\n    satisfied_with_activity,\n    fear_of_falling,\n    fall_history,\n    length_of_time_using_walker,\n    likes_using_walker,\n    received_walker_training,\n    description_of_changes_in_DLa,\n    would_purchase_stg,\n    how_much_would_you_pay,\n    would_recommend_stg,\n    stg_helped_learn_use_walker_better,\n    u.user_id,\n    h.hour_id,\n    t.trial_id,\n    d.device_id,\n    e.user_time,\n    e.extraction_time\nfrom `dev`.`dbt-nstankus_curated`.`curated_fact_stg` e\njoin `dev`.`dbt-nstankus_enriched`.`enriched_user` u\n    on u.user = e.user\njoin `dev`.`dbt-nstankus_enriched`.`enriched_hour` h\n    on h.week = e.week\n    and h.hour = date_trunc('hour', e.user_time)\njoin `dev`.`dbt-nstankus_enriched`.`enriched_trial` t\n    on t.trial_type = e.trial_type\njoin `dev`.`dbt-nstankus_enriched`.`enriched_device` d \n    on d.device = e.device\nleft join `dev`.`dbt-nstankus_curated`.`curated_fact_physical_therapy_evals` pt\n    on pt.user_id = u.user_id\n    and pt.device_id = d.device_id\nleft join `dev`.`dbt-nstankus_curated`.`curated_fact_user_surveys` us\n    on us.user_id = u.user_id\n    and us.device_id = d.device_id\n-- Flag for inactivity\nwhere e.activity_flag > 0", "relation_name": "`dev`.`dbt-nstankus_enriched`.`enriched_fact_stg`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-13T22:05:52.576667Z", "completed_at": "2024-04-13T22:05:52.581710Z"}, {"name": "execute", "started_at": "2024-04-13T22:05:52.583487Z", "completed_at": "2024-04-13T22:05:57.170101Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 4.701381206512451, "adapter_response": {"_message": "OK", "query_id": "01eef9e1-ff05-1083-9818-c55d20c4f6c4"}, "message": "OK", "failures": null, "unique_id": "model.stridetechgo.enriched_fact_stg_hourly", "compiled": true, "compiled_code": "select\n    count(1) as total_captured_sec,\n    CAST(SUM(activity_sec) AS NUMERIC) AS total_activity_sec,\n    TRY_CAST(AVG(left_lbf) AS NUMERIC) AS avg_left,\n    MAX(left_lbf) AS max_left,\n    MIN(left_lbf) AS min_left,\n    TRY_CAST(AVG(right_lbf) AS NUMERIC) AS avg_right,\n    MAX(right_lbf) AS max_right,\n    MIN(right_lbf) AS min_right,\n    CAST(AVG(force_threshold) AS DECIMAL(4,2)) AS force_thresh,\n    CAST(AVG(hip_distance) AS DECIMAL(4,2)) AS avg_hip_distance,\n    CAST(AVG(hip_distance_threshold) AS DECIMAL(4,2)) AS hip_thresh,\n    SUM(left_misuse_flag) AS left_misuse_event,\n    SUM(right_misuse_flag) AS right_misuse_event,\n    SUM(hip_misuse_flag) AS hip_misuse_event,\n    SUM(total_misuse_flag) AS total_misuse_event,\n    -- Product QA\n    SUM(left_missed_trigger) AS left_missed_trigger,\n    SUM(right_missed_trigger) AS right_missed_trigger,\n    SUM(hip_missed_trigger) AS hip_missed_trigger,\n    SUM(total_missed_trigger) AS total_missed_trigger,\n    SUM(left_trigger_misfire) AS left_trigger_misfire,\n    SUM(right_trigger_misfire) AS right_trigger_misfire,\n    SUM(hip_trigger_misfire) AS hip_trigger_misfire,\n    SUM(total_trigger_misfire) AS total_trigger_misfire,\n    AVG(left_lbf) + STDDEV(left_lbf) AS left_lbf_top_error,\n    AVG(left_lbf) - STDDEV(left_lbf) AS left_lbf_bottom_error,\n    AVG(right_lbf) + STDDEV(right_lbf) AS right_lbf_top_error,\n    AVG(right_lbf) - STDDEV(right_lbf) AS right_lbf_bottom_error,\n    AVG(hip_distance) + STDDEV(hip_distance) AS hip_distance_top_error,\n    AVG(hip_distance) - STDDEV(hip_distance) AS hip_distance_bottom_error,\n    TRY_CAST(AVG(left_adc) AS NUMERIC) AS avg_left_adc,\n    AVG(left_adc) + STDDEV(left_adc) AS left_adc_top_error,\n    AVG(left_adc) - STDDEV(left_adc) AS left_adc_bottom_error,\n    TRY_CAST(AVG(right_adc) AS NUMERIC) AS avg_right_adc,\n    AVG(right_adc) + STDDEV(right_adc) AS right_adc_top_error,\n    AVG(right_adc) - STDDEV(right_adc) AS right_adc_bottom_error,\n    -- PT metrics\n    MAX(start_abc_score) AS start_abc_score,\n    MAX(start_tug_score_fastest_attempt) AS start_tug_score_fastest_attempt,\n    MAX(start_tandem_balance_total_time) AS start_tandem_balance_total_time,\n    MAX(start_successful_tandem_balance_positions) AS start_successful_tandem_balance_positions,\n    MAX(start_functional_reach) AS start_functional_reach,\n    MAX(end_abc_score) AS end_abc_score,\n    MAX(end_tug_score_fastest_attempt) AS end_tug_score_fastest_attempt,\n    MAX(end_tandem_balance_score_total) AS end_tandem_balance_score_total,\n    MAX(end_successful_tandem_balance_positions) AS end_successful_tandem_balance_positions,\n    MAX(end_functional_reach) AS end_functional_reach,\n    -- Survey metrics\n    MAX(self_reported_physical_activity_per_week_hrs) AS self_reported_physical_activity_per_week_hrs,\n    MAX(satisfied_with_activity) AS satisfied_with_activity,\n    MAX(fear_of_falling) AS fear_of_falling,\n    MAX(fall_history) AS fall_history,\n    MAX(length_of_time_using_walker) AS length_of_time_using_walker,\n    MAX(likes_using_walker) AS likes_using_walker,\n    MAX(received_walker_training) AS received_walker_training,\n    MAX(description_of_changes_in_DLa) AS description_of_changes_in_DLa,\n    MAX(would_purchase_stg) AS would_purchase_stg,\n    MAX(how_much_would_you_pay) AS how_much_would_you_pay,\n    MAX(would_recommend_stg) AS would_recommend_stg,\n    MAX(stg_helped_learn_use_walker_better) AS stg_helped_learn_use_walker_better,\n    user_id,\n    device_id,\n    hour_id,\n    trial_id,\n    MAX(extraction_time) AS lastupdated\nfrom `dev`.`dbt-nstankus_enriched`.`enriched_fact_stg`\ngroup by hour_id, trial_id, user_id, device_id", "relation_name": "`dev`.`dbt-nstankus_enriched`.`enriched_fact_stg_hourly`"}], "elapsed_time": 73.62465977668762, "args": {"static_parser": true, "resource_types": [], "log_path": "/Users/stankusnt/stg_pipeline/stg_dbt_pipeline/target/dbt_analytics-2e6f354-a433ef6", "defer": false, "enable_legacy_logger": false, "favor_state": false, "log_file_max_bytes": 10485760, "introspect": true, "log_format_file": "json", "print": true, "printer_width": 80, "select": ["fqn:*"], "partial_parse": true, "invocation_command": "dbt build --select fqn:*", "warn_error_options": {"include": [], "exclude": []}, "use_colors_file": true, "version_check": true, "which": "build", "show": false, "macro_debugging": false, "target_path": "target/dbt_analytics-2e6f354-a433ef6", "log_format": "json", "cache_selected_only": false, "log_level": "info", "strict_mode": false, "populate_cache": true, "vars": {}, "include_saved_query": false, "indirect_selection": "eager", "write_json": true, "quiet": false, "log_level_file": "debug", "show_resource_report": false, "send_anonymous_usage_stats": false, "profiles_dir": "/Users/stankusnt/stg_pipeline/stg_dbt_pipeline", "partial_parse_file_diff": true, "project_dir": "/Users/stankusnt/stg_pipeline/stg_dbt_pipeline", "exclude": [], "use_colors": true}}