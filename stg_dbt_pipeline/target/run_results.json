{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.11", "generated_at": "2024-05-15T01:46:22.143435Z", "invocation_id": "aa8ba934-6beb-47ea-948a-1de71727c1d8", "env": {}}, "results": [{"status": "error", "timing": [{"name": "compile", "started_at": "2024-05-15T01:46:20.281380Z", "completed_at": "2024-05-15T01:46:20.291513Z"}, {"name": "execute", "started_at": "2024-05-15T01:46:20.292683Z", "completed_at": "2024-05-15T01:46:21.329340Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.0648558139801025, "adapter_response": {}, "message": "Runtime Error in model enriched_fact_stg_hourly (models/enriched/fact/enriched_fact_stg_hourly.sql)\n  [UNRESOLVED_COLUMN.WITH_SUGGESTION] A column, variable, or function parameter with name `s`.`time_id` cannot be resolved. Did you mean one of the following? [`stg`.`time_id`, `s`.`user_id`, `s`.`week_id`, `stg`.`user_id`, `stg`.`week_id`]. SQLSTATE: 42703; line 104 pos 4", "failures": null, "unique_id": "model.stridetechgo.enriched_fact_stg_hourly", "compiled": true, "compiled_code": "with session AS (\n    select\n        user_id,\n        week_id,\n        activity_flag,\n        max(session_length) as session_length\n    from `dev`.`dbt-nstankus_enriched`.`enriched_fact_stg`\n    group by user_id, week_id, activity_flag\n    having session_length > 0\n)\n\n\nselect\n    count(1) as total_captured_sec,\n    SUM(activity_flag) AS total_activity_sec,\n    SUM(case when s.session_length = 1 then 1 else 0 end) AS number_of_sessions,\n    AVG(s.session_length) AS avg_session_length,\n    TRY_CAST(AVG(left_lbf) AS NUMERIC) AS avg_left,\n    MAX(left_lbf) AS max_left,\n    MIN(left_lbf) AS min_left,\n    TRY_CAST(AVG(right_lbf) AS NUMERIC) AS avg_right,\n    MAX(right_lbf) AS max_right,\n    MIN(right_lbf) AS min_right,\n    CAST(AVG(force_threshold) AS DECIMAL(4,2)) AS force_thresh,\n    CAST(AVG(hip_distance) AS DECIMAL(4,2)) AS avg_hip_distance,\n    CAST(AVG(hip_distance_threshold) AS DECIMAL(4,2)) AS hip_thresh,\n    SUM(left_misuse_flag) AS left_misuse_event,\n    SUM(right_misuse_flag) AS right_misuse_event,\n    SUM(hip_misuse_flag) AS hip_misuse_event,\n    SUM(total_misuse_flag) AS total_misuse_event,\n    -- Product QA\n    SUM(left_missed_trigger) AS left_missed_trigger,\n    SUM(right_missed_trigger) AS right_missed_trigger,\n    SUM(hip_missed_trigger) AS hip_missed_trigger,\n    SUM(total_missed_trigger) AS total_missed_trigger,\n    SUM(left_trigger_misfire) AS left_trigger_misfire,\n    SUM(right_trigger_misfire) AS right_trigger_misfire,\n    SUM(hip_trigger_misfire) AS hip_trigger_misfire,\n    SUM(total_trigger_misfire) AS total_trigger_misfire,\n    AVG(left_lbf) + STDDEV(left_lbf) AS left_lbf_top_error,\n    AVG(left_lbf) - STDDEV(left_lbf) AS left_lbf_bottom_error,\n    AVG(right_lbf) + STDDEV(right_lbf) AS right_lbf_top_error,\n    AVG(right_lbf) - STDDEV(right_lbf) AS right_lbf_bottom_error,\n    AVG(hip_distance) + STDDEV(hip_distance) AS hip_distance_top_error,\n    AVG(hip_distance) - STDDEV(hip_distance) AS hip_distance_bottom_error,\n    TRY_CAST(AVG(left_adc) AS NUMERIC) AS avg_left_adc,\n    AVG(left_adc) + STDDEV(left_adc) AS left_adc_top_error,\n    AVG(left_adc) - STDDEV(left_adc) AS left_adc_bottom_error,\n    TRY_CAST(AVG(right_adc) AS NUMERIC) AS avg_right_adc,\n    AVG(right_adc) + STDDEV(right_adc) AS right_adc_top_error,\n    AVG(right_adc) - STDDEV(right_adc) AS right_adc_bottom_error,\n    -- PT metrics\n    MAX(start_abc_score) AS start_abc_score,\n    MAX(start_tug_score_fastest_attempt) AS start_tug_score_fastest_attempt,\n    MAX(start_tandem_balance_total_time) AS start_tandem_balance_total_time,\n    MAX(start_successful_tandem_balance_positions) AS start_successful_tandem_balance_positions,\n    MAX(start_functional_reach) AS start_functional_reach,\n    MAX(end_abc_score) AS end_abc_score,\n    MAX(end_tug_score_fastest_attempt) AS end_tug_score_fastest_attempt,\n    MAX(end_tandem_balance_score_total) AS end_tandem_balance_score_total,\n    MAX(end_successful_tandem_balance_positions) AS end_successful_tandem_balance_positions,\n    MAX(end_functional_reach) AS end_functional_reach,\n    -- Survey metrics\n    MAX(self_reported_physical_activity_per_week_hrs) AS self_reported_physical_activity_per_week_hrs,\n    MAX(satisfied_with_activity) AS satisfied_with_activity,\n    MAX(fear_of_falling) AS fear_of_falling,\n    MAX(fall_history) AS fall_history,\n    MAX(length_of_time_using_walker) AS length_of_time_using_walker,\n    MAX(likes_using_walker) AS likes_using_walker,\n    MAX(received_walker_training) AS received_walker_training,\n    MAX(description_of_changes_in_DLa) AS description_of_changes_in_DLa,\n    MAX(would_purchase_stg) AS would_purchase_stg,\n    MAX(how_much_would_you_pay) AS how_much_would_you_pay,\n    MAX(would_recommend_stg) AS would_recommend_stg,\n    MAX(stg_helped_learn_use_walker_better) AS stg_helped_learn_use_walker_better,\n    facility_id,\n    stg.user_id,\n    device_id,\n    stg.time_id,\n    stg.week_id,\n    session_id,\n    MAX(extraction_time) AS extraction_time,\n    current_timestamp() AS last_updated\nfrom `dev`.`dbt-nstankus_enriched`.`enriched_fact_stg` stg\nleft join session s on \n    s.user_id = stg.user_id and\n    s.week_id = stg.week_id and\n    s.time_id = stg.time_id\ngroup by facility_id, stg.time_id, stg.week_id, session_id, stg.user_id, device_id", "relation_name": "`dev`.`dbt-nstankus_enriched`.`enriched_fact_stg_hourly`"}], "elapsed_time": 3.7355659008026123, "args": {"log_format_file": "debug", "exclude": [], "send_anonymous_usage_stats": true, "warn_error_options": {"include": [], "exclude": []}, "indirect_selection": "eager", "partial_parse_file_diff": true, "include_saved_query": false, "which": "build", "macro_debugging": false, "print": true, "write_json": true, "select": ["enriched_fact_stg_hourly"], "show": false, "show_resource_report": false, "log_format": "default", "populate_cache": true, "use_colors_file": true, "invocation_command": "dbt ", "quiet": false, "profiles_dir": "/Users/stankusnt/stg_full_pipeline/stg_dbt_pipeline", "introspect": true, "vars": {}, "log_file_max_bytes": 10485760, "use_colors": true, "resource_types": [], "static_parser": true, "strict_mode": false, "log_level": "info", "favor_state": false, "log_level_file": "debug", "enable_legacy_logger": false, "defer": false, "partial_parse": true, "log_path": "/Users/stankusnt/stg_full_pipeline/stg_dbt_pipeline/logs", "cache_selected_only": false, "project_dir": "/Users/stankusnt/stg_full_pipeline/stg_dbt_pipeline", "printer_width": 80, "version_check": true}}