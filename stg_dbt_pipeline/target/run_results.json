{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.11", "generated_at": "2024-04-29T23:09:35.598887Z", "invocation_id": "097c941e-54f9-4a44-8630-7785ea500c9c", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T23:09:18.421626Z", "completed_at": "2024-04-29T23:09:18.433882Z"}, {"name": "execute", "started_at": "2024-04-29T23:09:18.435077Z", "completed_at": "2024-04-29T23:09:34.816525Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 16.401165008544922, "adapter_response": {"_message": "OK", "query_id": "01ef067d-82be-1631-98b3-7693a32b8d0a"}, "message": "OK", "failures": null, "unique_id": "model.stridetechgo.enriched_fact_stg", "compiled": true, "compiled_code": "select\n    left_misuse_flag,\n    right_misuse_flag,\n    hip_misuse_flag,\n    total_misuse_flag,\n    -- Create metrics to track difference between identified misuse and triggered misuse\n    --- Missed triggers\n    CASE \n        WHEN left_vibration_trigger > 1 AND left_misuse_flag = 1 THEN 0\n            WHEN left_vibration_trigger > 1 AND left_misuse_flag = 0 THEN 0\n                WHEN left_vibration_trigger = 1 AND left_misuse_flag = 1 THEN 1\n        ELSE NULL\n    END AS left_missed_trigger,\n    CASE \n        WHEN right_vibration_trigger > 1 AND right_misuse_flag = 1 THEN 0\n            WHEN right_vibration_trigger > 1 AND right_misuse_flag = 0 THEN 0\n                WHEN right_vibration_trigger = 1 AND right_misuse_flag = 1 THEN 1\n        ELSE NULL\n    END AS right_missed_trigger,\n    CASE \n        WHEN hip_vibration_trigger > 1 AND hip_misuse_flag = 1 THEN 0\n            WHEN hip_vibration_trigger > 1 AND hip_misuse_flag = 0 THEN 0\n                WHEN hip_vibration_trigger = 1 AND hip_misuse_flag = 1 THEN 1\n        ELSE NULL\n    END AS hip_missed_trigger,\n    CASE \n        WHEN (left_vibration_trigger > 1 OR right_vibration_trigger > 1 OR hip_vibration_trigger > 1) AND total_misuse_flag = 1 THEN 0\n            WHEN (left_vibration_trigger > 1 OR right_vibration_trigger > 1 OR hip_vibration_trigger > 1) AND total_misuse_flag = 0 THEN 0\n                WHEN (left_vibration_trigger = 1 AND right_vibration_trigger = 1 AND hip_vibration_trigger = 1) AND total_misuse_flag = 1 THEN 1\n        ELSE NULL\n    END AS total_missed_trigger,\n    --- Trigger misfires\n    CASE \n        WHEN left_vibration_trigger = 3 AND left_misuse_flag = 1 THEN 0\n            WHEN left_vibration_trigger = 3 AND left_misuse_flag = 0 THEN 1\n                WHEN left_vibration_trigger < 3 AND left_misuse_flag = 1 THEN 0\n        ELSE NULL\n    END AS left_trigger_misfire,\n    CASE \n        WHEN right_vibration_trigger = 3 AND right_misuse_flag = 1 THEN 0\n            WHEN right_vibration_trigger = 3 AND right_misuse_flag = 0 THEN 1\n                WHEN right_vibration_trigger < 3 AND right_misuse_flag = 1 THEN 0\n        ELSE NULL\n    END AS right_trigger_misfire,\n    CASE \n        WHEN hip_vibration_trigger = 3 AND hip_misuse_flag = 1 THEN 0\n            WHEN hip_vibration_trigger = 3 AND hip_misuse_flag = 0 THEN 1\n                WHEN hip_vibration_trigger < 3 AND hip_misuse_flag = 1 THEN 0\n        ELSE NULL\n    END AS hip_trigger_misfire,\n    CASE \n        WHEN (left_vibration_trigger = 3 OR right_vibration_trigger = 3 OR hip_vibration_trigger = 3) AND total_misuse_flag = 1 THEN 0\n            WHEN (left_vibration_trigger = 3 OR right_vibration_trigger = 3 OR hip_vibration_trigger = 3) AND total_misuse_flag = 0 THEN 1\n                WHEN (left_vibration_trigger < 3 AND right_vibration_trigger < 3 AND hip_vibration_trigger < 3) AND total_misuse_flag = 1 THEN 0\n        ELSE NULL\n    END AS total_trigger_misfire,\n    -- Translate triggers to vibration\n    CASE \n        WHEN left_vibration_trigger == 3  THEN 1\n            WHEN left_vibration_trigger IS NOT NULL THEN 0\n            ELSE NULL\n    END AS left_vibration_flag,\n    CASE \n        WHEN right_vibration_trigger == 3  THEN 1\n            WHEN right_vibration_trigger IS NOT NULL THEN 0\n            ELSE NULL\n    END AS right_vibration_flag,\n    CASE \n        WHEN hip_vibration_trigger == 3  THEN 1\n            WHEN hip_vibration_trigger IS NOT NULL THEN 0\n            ELSE NULL\n    END AS hip_vibration_flag,\n    CASE \n        WHEN (left_vibration_trigger == 3 OR right_vibration_trigger == 3 OR hip_vibration_trigger == 3)  THEN 1\n            WHEN COALESCE(left_vibration_flag, right_vibration_trigger, hip_vibration_trigger) IS NOT NULL THEN 0\n            ELSE NULL\n    END AS vibration_flag,\n    activity_flag,\n    left_lbf,\n    right_lbf,\n    left_adc,\n    right_adc,\n    hip_distance,\n    force_threshold,\n    hip_distance_threshold,\n    baseline_left_adc,\n    baseline_right_adc,\n    left_adc_change,\n    right_adc_change,\n    d.fsr_length,\n    -- PT metrics\n    pt.start_abc_score,\n    pt.start_tug_score_fastest_attempt,\n    pt.start_tandem_balance_total_time,\n    pt.start_successful_tandem_balance_positions,\n    pt.start_functional_reach,\n    pt.end_abc_score,\n    pt.end_tug_score_fastest_attempt,\n    pt.end_tandem_balance_score_total,\n    pt.end_successful_tandem_balance_positions,\n    pt.end_functional_reach,\n    -- Survey metrics\n    us.self_reported_physical_activity_per_week_hrs,\n    us.satisfied_with_activity,\n    us.fear_of_falling,\n    us.fall_history,\n    us.length_of_time_using_walker,\n    us.likes_using_walker,\n    us.received_walker_training,\n    us.description_of_changes_in_DLa,\n    us.would_purchase_stg,\n    us.how_much_would_you_pay,\n    us.would_recommend_stg,\n    us.stg_helped_learn_use_walker_better,\n    f.facility_id,\n    u.user_id,\n    t.time_id,\n    w.week_id,\n    s.session_id,\n    d.device_id,\n    e.extraction_time,\n    e.device_time,\n    current_timestamp() AS last_updated\nfrom `prod`.`curated`.`curated_fact_stg` e\njoin `prod`.`curated`.`curated_user` u\n    on u.user_id = e.user_id\njoin `prod`.`curated`.`curated_time` t\n    on t.time_id = e.time_id\njoin `prod`.`curated`.`curated_week` w\n    on w.week_id = e.week_id\njoin `prod`.`curated`.`curated_session` s\n    on s.session_id = e.session_id\njoin `prod`.`curated`.`curated_device` d \n    on d.device_id = e.device_id\njoin `prod`.`curated`.`curated_facility` f\n    on f.facility_id = e.facility_id\nleft join `prod`.`curated`.`curated_fact_physical_therapy_evals` pt\n    on pt.user_id = u.user_id\n    and pt.device_id = d.device_id\nleft join `prod`.`curated`.`curated_fact_user_surveys` us\n    on us.user_id = u.user_id\n    and us.device_id = d.device_id\nwhere activity_flag = 1", "relation_name": "`prod`.`enriched`.`enriched_fact_stg`"}], "elapsed_time": 32.23145604133606, "args": {"strict_mode": false, "log_format_file": "debug", "show": false, "log_level_file": "debug", "partial_parse": true, "use_colors_file": true, "print": true, "printer_width": 80, "vars": {}, "which": "build", "exclude": [], "resource_types": [], "defer": false, "invocation_command": "dbt build --select=enriched_fact_stg --target=prod", "log_format": "default", "macro_debugging": false, "log_level": "info", "partial_parse_file_diff": true, "quiet": false, "cache_selected_only": false, "log_path": "/Users/stankusnt/stg_full_pipeline/stg_dbt_pipeline/logs", "use_colors": true, "favor_state": false, "introspect": true, "show_resource_report": false, "static_parser": true, "include_saved_query": false, "project_dir": "/Users/stankusnt/stg_full_pipeline/stg_dbt_pipeline", "write_json": true, "select": ["enriched_fact_stg"], "warn_error_options": {"include": [], "exclude": []}, "version_check": true, "enable_legacy_logger": false, "send_anonymous_usage_stats": true, "populate_cache": true, "profiles_dir": "/Users/stankusnt/stg_full_pipeline/stg_dbt_pipeline", "indirect_selection": "eager", "log_file_max_bytes": 10485760, "target": "prod"}}